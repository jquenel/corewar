S = LineSeparator S			// On enlève les commentaires à l’analyse lexicale.
  | Name LineSeparator ExpectComment
  | Comment LineSeparator ExpectName
ExpectComment = LineSeparator ExpectComment
			  | Comment LineSeparator Line
ExpectName = LineSeparator ExpectName
		   | Name LineSeparator Line
Comment = CommentCommand StringLiteral
Name = NameCommand StringLiteral
Line = Label Instr LineSeparator Line
	 | Label LineSeparator Line
	 | Instr LineSeparator Line
	 | LineSeparator Line
	 | ε
Instr = Operator Operand OperandNext
OperandNext = SeparatorChar Operand OperandNext
			| ε
Operand = DirectChar Val
		| Val
		| Register
Val = LabelVal
	| Number

LineSeparator = \n
CommentCommand = \.comment
NameCommand = \.name
StringLiteral = "\([^"]*\(\\"\)?\)*"
Label = [:label_chars:]+:
Operator = {...}
SeparatorChar = ,
DirectChar = %
Register = r[1-9][0-9]*
LabelVal = :[:label_chars:]+
Number = [1-9][0-9]*
